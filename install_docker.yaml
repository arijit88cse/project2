---
- name: Robust Docker Engine Installation on Ubuntu/Debian
  hosts: test_servers
  become: yes

  vars:
    docker_pkg: docker-ce
    docker_service: docker

  tasks:
    - name: Ensure dependencies are installed
      ansible.builtin.apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Set up the stable Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Install the latest Docker packages
      ansible.builtin.apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        
    - name: Ensure Docker service is running and enabled
      ansible.builtin.service:
        name: "{{ docker_service }}"
        state: started
        enabled: yes
      # Crucial: This ensures the 'docker' group is available before the next step

    - name: Add remote user to the docker group
      # This task runs ONLY after the package is installed and the service is started,
      # guaranteeing the 'docker' group exists, thus fixing your "Group docker does not exist" error.
      ansible.builtin.user:
        name: "{{ ansible_user }}" # User connecting to the remote host
        groups: docker
        append: yes
      when: ansible_user != 'root'
